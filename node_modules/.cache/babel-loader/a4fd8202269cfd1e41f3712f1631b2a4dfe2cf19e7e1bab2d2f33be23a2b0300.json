{"ast":null,"code":"var _jsxFileName = \"C:\\\\weatherApp-Reactjs\\\\src\\\\forcast.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport ReactAnimatedWeather from \"react-animated-weather\";\n\n// Nominatim API does not require an API key\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NOMINATIM_BASE_URL = \"https://nominatim.openstreetmap.org\";\nconst OPENWEATHER_BASE_URL = \"https://api.openweathermap.org/data/2.5/\";\nconst OPENWEATHER_API_KEY = \"3cfc92ca2e1f3629d6f9909d78e768d6\"; // Replace with your OpenWeatherMap API key\n\nfunction Forcast() {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [weather, setWeather] = useState({});\n\n  // Search function using Nominatim for location data\n  const search = location => {\n    // Step 1: Get the coordinates using Nominatim\n    axios.get(`${NOMINATIM_BASE_URL}/search`, {\n      params: {\n        q: location,\n        format: \"json\",\n        addressdetails: 1\n      }\n    }).then(geoResponse => {\n      if (geoResponse.data.length > 0) {\n        const {\n          lat,\n          lon\n        } = geoResponse.data[0];\n\n        // Step 2: Use those coordinates to get weather data from OpenWeatherMap\n        axios.get(`${OPENWEATHER_BASE_URL}weather`, {\n          params: {\n            lat: lat,\n            lon: lon,\n            units: \"metric\",\n            appid: OPENWEATHER_API_KEY\n          }\n        }).then(response => {\n          setWeather(response.data);\n          setQuery(\"\"); // Reset the input field\n        }).catch(error => {\n          console.error(\"Error fetching weather data:\", error);\n          setWeather(\"\");\n          setQuery(\"\");\n          setError({\n            message: \"Weather Data Not Found\",\n            query: location\n          });\n        });\n      } else {\n        setError({\n          message: \"Location Not Found\",\n          query: location\n        });\n      }\n    }).catch(error => {\n      console.error(\"Error fetching location data:\", error);\n      setError({\n        message: \"Location Not Found\",\n        query: location\n      });\n    });\n  };\n  useEffect(() => {\n    search(\"Delhi\"); // Default city\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forecast\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forecast-icon\",\n      children: /*#__PURE__*/_jsxDEV(ReactAnimatedWeather, {\n        icon: \"CLEAR_DAY\",\n        color: \"white\",\n        size: 112,\n        animate: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"today-weather\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Today's Weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"search-bar\",\n          placeholder: \"Search any city or village\",\n          onChange: e => setQuery(e.target.value),\n          value: query\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"img-box\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://images.avishkaar.cc/workflow/newhp/search-white.png\",\n            onClick: () => search(query),\n            alt: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: typeof weather.main !== \"undefined\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"cityHead\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [weather.name, \", \", weather.sys.country]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"temp\",\n              src: `https://openweathermap.org/img/wn/${weather.weather[0].icon}.png`,\n              alt: \"Weather Icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Temperature\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"temp\",\n              children: [Math.round(weather.main.temp), \"\\xB0C (\", weather.weather[0].main, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Humidity\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"temp\",\n              children: [Math.round(weather.main.humidity), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Wind Speed\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"temp\",\n              children: [Math.round(weather.wind.speed), \" Km/h\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [error.query, \" \", error.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(Forcast, \"GrDYqKsh21imm2Fecy7JG84LALU=\");\n_c = Forcast;\nexport default Forcast;\nvar _c;\n$RefreshReg$(_c, \"Forcast\");","map":{"version":3,"names":["React","useState","useEffect","axios","ReactAnimatedWeather","jsxDEV","_jsxDEV","NOMINATIM_BASE_URL","OPENWEATHER_BASE_URL","OPENWEATHER_API_KEY","Forcast","_s","query","setQuery","error","setError","weather","setWeather","search","location","get","params","q","format","addressdetails","then","geoResponse","data","length","lat","lon","units","appid","response","catch","console","message","className","children","icon","color","size","animate","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","value","src","onClick","alt","main","name","sys","country","Math","round","temp","humidity","wind","speed","_c","$RefreshReg$"],"sources":["C:/weatherApp-Reactjs/src/forcast.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport ReactAnimatedWeather from \"react-animated-weather\";\r\n\r\n// Nominatim API does not require an API key\r\nconst NOMINATIM_BASE_URL = \"https://nominatim.openstreetmap.org\";\r\nconst OPENWEATHER_BASE_URL = \"https://api.openweathermap.org/data/2.5/\";\r\nconst OPENWEATHER_API_KEY = \"3cfc92ca2e1f3629d6f9909d78e768d6\"; // Replace with your OpenWeatherMap API key\r\n\r\nfunction Forcast() {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [weather, setWeather] = useState({});\r\n\r\n  // Search function using Nominatim for location data\r\n  const search = (location) => {\r\n    // Step 1: Get the coordinates using Nominatim\r\n    axios\r\n      .get(`${NOMINATIM_BASE_URL}/search`, {\r\n        params: {\r\n          q: location,\r\n          format: \"json\",\r\n          addressdetails: 1\r\n        }\r\n      })\r\n      .then((geoResponse) => {\r\n        if (geoResponse.data.length > 0) {\r\n          const { lat, lon } = geoResponse.data[0];\r\n\r\n          // Step 2: Use those coordinates to get weather data from OpenWeatherMap\r\n          axios\r\n            .get(`${OPENWEATHER_BASE_URL}weather`, {\r\n              params: {\r\n                lat: lat,\r\n                lon: lon,\r\n                units: \"metric\",\r\n                appid: OPENWEATHER_API_KEY\r\n              }\r\n            })\r\n            .then((response) => {\r\n              setWeather(response.data);\r\n              setQuery(\"\"); // Reset the input field\r\n            })\r\n            .catch((error) => {\r\n              console.error(\"Error fetching weather data:\", error);\r\n              setWeather(\"\");\r\n              setQuery(\"\");\r\n              setError({ message: \"Weather Data Not Found\", query: location });\r\n            });\r\n        } else {\r\n          setError({ message: \"Location Not Found\", query: location });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching location data:\", error);\r\n        setError({ message: \"Location Not Found\", query: location });\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    search(\"Delhi\"); // Default city\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"forecast\">\r\n      <div className=\"forecast-icon\">\r\n        <ReactAnimatedWeather\r\n          icon=\"CLEAR_DAY\"\r\n          color=\"white\"\r\n          size={112}\r\n          animate={true}\r\n        />\r\n      </div>\r\n      <div className=\"today-weather\">\r\n        <h3>Today's Weather</h3>\r\n        <div className=\"search-box\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"search-bar\"\r\n            placeholder=\"Search any city or village\"\r\n            onChange={(e) => setQuery(e.target.value)}\r\n            value={query}\r\n          />\r\n          <div className=\"img-box\">\r\n            <img\r\n              src=\"https://images.avishkaar.cc/workflow/newhp/search-white.png\"\r\n              onClick={() => search(query)}\r\n              alt=\"Search\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <ul>\r\n          {typeof weather.main !== \"undefined\" ? (\r\n            <div>\r\n              <li className=\"cityHead\">\r\n                <p>\r\n                  {weather.name}, {weather.sys.country}\r\n                </p>\r\n                <img\r\n                  className=\"temp\"\r\n                  src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}.png`}\r\n                  alt=\"Weather Icon\"\r\n                />\r\n              </li>\r\n              <li>\r\n                Temperature{\" \"}\r\n                <span className=\"temp\">\r\n                  {Math.round(weather.main.temp)}°C ({weather.weather[0].main})\r\n                </span>\r\n              </li>\r\n              <li>\r\n                Humidity{\" \"}\r\n                <span className=\"temp\">{Math.round(weather.main.humidity)}%</span>\r\n              </li>\r\n              <li>\r\n                Wind Speed{\" \"}\r\n                <span className=\"temp\">{Math.round(weather.wind.speed)} Km/h</span>\r\n              </li>\r\n            </div>\r\n          ) : (\r\n            <li>\r\n              {error.query} {error.message}\r\n            </li>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Forcast;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}